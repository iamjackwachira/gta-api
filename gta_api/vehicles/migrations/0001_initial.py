# Generated by Django 3.1.1 on 2020-09-19 11:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RealLifeVehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleManufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleStorageLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleWorkshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=70, unique=True)),
                ('vehicle_class', models.CharField(max_length=70, verbose_name=(('boats', 'Boats'), ('commercial', 'Commercial'), ('compacts', 'Compacts'), ('coupes', 'Coupes'), ('cycles', 'Cycles'), ('emergency', 'Emergency'), ('helicopters', 'Helicopters'), ('industrial', 'Industrial'), ('military', 'Military'), ('motorcycles', 'Motorcycles'), ('muscle', 'Muscle'), ('offroad', 'Off-road'), ('openwheel', 'Open-wheel'), ('planes', 'Planes'), ('sedan', 'Sedan'), ('service', 'Service'), ('sports', 'Sports'), ('sport_classic', 'Sport Classic'), ('super', 'Super'), ('suv', 'SUV'), ('utility', 'Utility'), ('vans', 'Vans')))),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('sell_ability', models.CharField(blank=True, choices=[('purchased_high_end', 'Purchased High End'), ('purchased_or_stolen', 'Purchased Or Stolen'), ('only_stolen', 'Only Stolen'), ('not_sellable', 'Can not Be Sold')], help_text='If the vehicle can be sold', max_length=50, null=True)),
                ('stolen_sell_value', models.DecimalField(decimal_places=2, help_text='Max sell value if stolen', max_digits=20)),
                ('resale_value', models.DecimalField(decimal_places=2, help_text='Max sell value if purchased', max_digits=20)),
                ('top_speed', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight_in_kg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('drive_train', models.CharField(choices=[('fwd', 'FWD'), ('rwd', 'RWD'), ('awd', 'AWD'), ('4wd', '4WD')], max_length=3)),
                ('num_gears', models.PositiveSmallIntegerField()),
                ('capacity', models.PositiveSmallIntegerField()),
                ('speed_rating', models.PositiveSmallIntegerField()),
                ('acceleration_rating', models.PositiveSmallIntegerField()),
                ('handling_rating', models.PositiveSmallIntegerField()),
                ('braking_rating', models.PositiveSmallIntegerField()),
                ('game_edition_mode', models.CharField(blank=True, help_text='Game Edition/Mode', max_length=20, null=True, verbose_name=(('gta_online', 'GTA Online'), ('story_mode', 'Story Mode'), ('returning_player_bonus', 'Returning Player Bonus'), ('criminal_enterprise_starter_pack', 'Criminal Enterprise Starter Pack'), ('mission_only', 'Mission Only'), ('collectors_edition', 'Collectors Edition'), ('all_editions', 'All Editions')))),
                ('special_features', models.CharField(blank=True, choices=[('arena_contender', 'Arena Contender'), ('armed', 'Armed Vehicle'), ('armored', 'Armored Vehicle'), ('covertible_hard_top', 'Covertible Hard Top'), ('convertible_soft_top', 'Covertible Soft Top'), ('custom_vehicle', 'Custom Vehicle'), ('electric', 'Electric Vehicle'), ('float_water', 'Float on Water'), ('flying_ability', 'Flying Ability'), ('gang_vehicle', 'Gang Vehicle'), ('hover_ability', 'Hover Ability'), ('kers_boost', 'KERS Boost'), ('remote_controlled', 'Remote Controlled'), ('rocket_boost', 'Rocket Boost'), ('special_vehicle', 'Special Vehicle'), ('submersible', 'Submersible'), ('towing_hitch', 'Towing Hitch'), ('vehicle_workshop', 'Vehicle Workshop'), ('weaponized', 'Weaponized Vehicle')], max_length=20, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('based_on', models.ForeignKey(blank=True, help_text="Reallife vehicle it's based on", null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.reallifevehicle')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicles.vehiclemanufacturer')),
                ('storage_location', models.ManyToManyField(to='vehicles.VehicleStorageLocation')),
                ('workshop', models.ManyToManyField(help_text='Workshop for modifying vehicle', to='vehicles.VehicleWorkshop')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-created_on'],
            },
        ),
    ]
